{
  "editor.fontSize": 13.5,
  "editor.glyphMargin": true,
  "editor.guides.bracketPairs": "active",
  "editor.inlineSuggest.enabled": true,
  "editor.lineNumbers": "interval",
  "editor.renderWhitespace": "boundary",
  "editor.tabSize": 2,
  "editor.unicodeHighlight.invisibleCharacters": false,
  "editor.bracketPairColorization.enabled": true,
  "i18n-ally.editor.preferEditor": true,
  "editor.codeActionsOnSave": {
    "source.fixAll": "never",
    "source.fixAll.eslint": "explicit",
    "source.organizeImports": "never"
  },
  "autoclick": {
    "second": 150,
    "updateSecond": 150
  },
  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,
  "window.autoDetectColorScheme": true,
  "window.dialogStyle": "custom",
  "workbench.editor.closeOnFileDelete": true,
  "workbench.editor.highlightModifiedTabs": true,
  "workbench.editor.tabCloseButton": "left",
  "workbench.editor.limit.enabled": true,
  "workbench.editor.limit.perEditorGroup": true,
  "workbench.editor.limit.value": 5,
  "workbench.fontAliasing": "antialiased",
  "workbench.list.smoothScrolling": true,
  "workbench.startupEditor": "newUntitledFile",
  "workbench.tree.expandMode": "singleClick",
  "workbench.tree.indent": 14,
  "extensions.ignoreRecommendations": true,
  "files.eol": "\n",
  "files.insertFinalNewline": true,
  "files.simpleDialog.enable": true,
  "git.autofetch": true,
  "git.confirmSync": false,
  "git.enableSmartCommit": true,
  "git.untrackedChanges": "separate",
  "terminal.integrated.cursorBlinking": true,
  "terminal.integrated.cursorStyle": "line",
  "terminal.integrated.fontWeight": "300",
  "terminal.integrated.persistentSessionReviveProcess": "never",
  "terminal.integrated.tabs.enabled": true,
  "scm.diffDecorationsGutterWidth": 2,
  "debug.onTaskErrors": "debugAnyway",
  "diffEditor.ignoreTrimWhitespace": false,
  "search.exclude": {
    "**/.git": true,
    "**/.github": true,
    "**/.nuxt": true,
    "**/.output": true,
    "**/.pnpm": true,
    "**/.vscode": true,
    "**/.yarn": true,
    "**/bower_components": true,
    "**/dist/**": true,
    "**/logs": true,
    "**/node_modules": true,
    "**/out/**": true,
    "**/package-lock.json": true,
    "**/pnpm-lock.yaml": true,
    "**/tmp": true,
    "**/yarn.lock": true
  },
  // Extension configs
  "emmet.showSuggestionsAsSnippets": true,
  "emmet.triggerExpansionOnTab": false,
  "errorLens.enabledDiagnosticLevels": ["warning", "error"],
  "errorLens.excludeBySource": ["cSpell", "Grammarly", "eslint"],
  "eslint.codeAction.showDocumentation": {
    "enable": true
  },
  "eslint.quiet": true,
  "eslint.validate": [
    "javascript",
    "typescript",
    "javascriptreact",
    "typescriptreact",
    "vue",
    "html",
    "markdown",
    "json",
    "jsonc",
    "json5"
  ],
  "github.copilot.enable": {
    "*": true,
    "yaml": true,
    "plaintext": true,
    "markdown": true,
    "javascript": true,
    "html": true
  },
  "cSpell.allowCompoundWords": true,
  "cSpell.language": "en,en-US,en-GB",
  "css.lint.hexColorLength": "ignore",
  "githubIssues.workingIssueFormatScm": "#${issueNumberLabel}",
  "githubPullRequests.fileListLayout": "tree",
  "gitlens.codeLens.authors.enabled": false,
  "gitlens.codeLens.enabled": false,
  "gitlens.codeLens.recentChange.enabled": false,
  "gitlens.menus": {
    "editor": {
      "blame": false,
      "clipboard": true,
      "compare": true,
      "history": false,
      "remote": false
    },
    "editorGroup": {
      "blame": true,
      "compare": false
    },
    "editorTab": {
      "clipboard": true,
      "compare": true,
      "history": true,
      "remote": true
    },
    "explorer": {
      "clipboard": true,
      "compare": true,
      "history": true,
      "remote": true
    },
    "scm": {
      "authors": true
    },
    "scmGroup": {
      "compare": true,
      "openClose": true,
      "stash": true
    },
    "scmGroupInline": {
      "stash": true
    },
    "scmItem": {
      "clipboard": true,
      "compare": true,
      "history": true,
      "remote": false,
      "stash": true
    }
  },
  "i18n-ally.autoDetection": false,
  "i18n-ally.displayLanguage": "en",
  "i18n-ally.ignoredLocales": [],
  "iconify.annotations": true,
  "iconify.inplace": true,
  "svg.preview.mode": "svg",
  "volar.autoCompleteRefs": false,
  "volar.codeLens.pugTools": false,
  "volar.codeLens.scriptSetupTools": true,
  "volar.completion.preferredTagNameCase": "pascal",
  "volar.showWelcomePage": false,
  "volar.takeOverMode.enabled": true,
  "windicss.enableCodeFolding": false,
  "prettier.enable": false, // I only use Prettier for manually formatting
  "prettier.printWidth": 200,
  "prettier.semi": false,
  "prettier.singleQuote": true,
  "prettier.bracketSpacing": true,
  // File Nesting
  // this might not be up to date with the repo, please check yourself
  // updated 2022-03-10 06:10
  // https://github.com/antfu/vscode-file-nesting-config
  "explorer.fileNesting.enabled": true,
  "explorer.fileNesting.expand": false,
  "explorer.fileNesting.patterns": {
    "//": "Last update at 2024/10/10 18:41:06",
    ".clang-tidy": ".clang-format, .clangd, compile_commands.json",
    ".env": "*.env, .env.*, .envrc, env.d.ts",
    ".gitignore": ".gitattributes, .gitmodules, .gitmessage, .mailmap, .git-blame*",
    ".project": ".classpath",
    "+layout.svelte": "+layout.ts,+layout.ts,+layout.js,+layout.server.ts,+layout.server.js,+layout.gql",
    "+page.svelte": "+page.server.ts,+page.server.js,+page.ts,+page.js,+page.gql",
    "ansible.cfg": "ansible.cfg, .ansible-lint, requirements.yml",
    "app.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "artisan": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, server.php, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, webpack.mix.js, windi.config.*",
    "astro.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "build-wrapper.log": "build-wrapper*.log, build-wrapper-dump*.json, build-wrapper-win*.exe, build-wrapper-linux*, build-wrapper-macosx*",
    "BUILD.bazel": "*.bzl, *.bazel, *.bazelrc, bazel.rc, .bazelignore, .bazelproject, WORKSPACE",
    "Cargo.toml": ".clippy.toml, .rustfmt.toml, cargo.lock, clippy.toml, cross.toml, rust-toolchain.toml, rustfmt.toml",
    "CMakeLists.txt": "*.cmake, *.cmake.in, .cmake-format.yaml, CMakePresets.json, CMakeCache.txt",
    "composer.json": ".php*.cache, composer.lock, phpunit.xml*, psalm*.xml",
    "default.nix": "shell.nix",
    "deno.json*": "*.env, .env.*, .envrc, api-extractor.json, deno.lock, env.d.ts, import-map.json, import_map.json, jsconfig.*, tsconfig.*, tsdoc.*",
    "Dockerfile": "*.dockerfile, .devcontainer.*, .dockerignore, captain-definition, compose.*, docker-compose.*, dockerfile*",
    "flake.nix": "flake.lock",
    "gatsby-config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, gatsby-browser.*, gatsby-node.*, gatsby-ssr.*, gatsby-transformer.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "gemfile": ".ruby-version, gemfile.lock",
    "go.mod": ".air*, go.sum",
    "go.work": "go.work.sum",
    "hatch.toml": ".editorconfig, .flake8, .isort.cfg, .python-version, hatch.toml, requirements*.in, requirements*.pip, requirements*.txt, tox.ini",
    "I*.cs": "$(capture).cs",
    "Makefile": "*.mk",
    "mix.exs": ".credo.exs, .dialyzer_ignore.exs, .formatter.exs, .iex.exs, .tool-versions, mix.lock",
    "next.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, next-env.d.ts, next-i18next.config.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "nuxt.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .nuxtignore, .nuxtrc, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "package.json": "*.code-workspace, .browserslist*, .circleci*, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json*, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitmojirc.json, .gitpod*, .huskyrc*, .jslint*, .knip.*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .pylintrc, .release-please*.json, .releaserc*, .ruff.toml, .sentry*, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, biome.json*, bower.json, build.config.*, bun.lockb, bunfig.toml, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json*, electron-builder.*, eslint*, firebase.json, grunt*, gulp*, jenkins*, knip.*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-please*.json, release-tasks.sh, release.config.*, renovate*, rollup.config.*, rspack*, ruff.toml, simple-git-hooks*, sonar-project.properties, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, wrangler.toml, xo.config.*, yarn*",
    "Pipfile": ".editorconfig, .flake8, .isort.cfg, .python-version, Pipfile, Pipfile.lock, requirements*.in, requirements*.pip, requirements*.txt, tox.ini",
    "pubspec.yaml": ".metadata, .packages, all_lint_rules.yaml, analysis_options.yaml, build.yaml, pubspec.lock, pubspec_overrides.yaml",
    "pyproject.toml": ".commitlint*, .dlint.json, .dprint.json*, .editorconfig, .eslint*, .flake8, .flowconfig, .isort.cfg, .jslint*, .lintstagedrc*, .markdownlint*, .pdm-python, .pdm.toml, .prettier*, .pylintrc, .python-version, .ruff.toml, .stylelint*, .textlint*, .xo-config*, .yamllint*, MANIFEST.in, Pipfile, Pipfile.lock, biome.json*, commitlint*, dangerfile*, dlint.json, dprint.json*, eslint*, hatch.toml, lint-staged*, pdm.lock, phpcs.xml, poetry.lock, poetry.toml, prettier*, pyproject.toml, pyrightconfig.json, requirements*.in, requirements*.pip, requirements*.txt, ruff.toml, setup.cfg, setup.py, stylelint*, tox.ini, tslint*, uv.lock, uv.toml, xo.config.*",
    "quasar.conf.js": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, quasar.extensions.json, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "readme*": "AUTHORS, Authors, BACKERS*, Backers*, CHANGELOG*, CITATION*, CODEOWNERS, CODE_OF_CONDUCT*, CONTRIBUTING*, CONTRIBUTORS, COPYING*, CREDITS, Changelog*, Citation*, Code_Of_Conduct*, Codeowners, Contributing*, Contributors, Copying*, Credits, GOVERNANCE.MD, Governance.md, HISTORY.MD, History.md, LICENSE*, License*, MAINTAINERS, Maintainers, README-*, README_*, RELEASE_NOTES*, ROADMAP.MD, Readme-*, Readme_*, Release_Notes*, Roadmap.md, SECURITY.MD, SPONSORS*, Security.md, Sponsors*, authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying*, credits, governance.md, history.md, license*, maintainers, readme-*, readme_*, release_notes*, roadmap.md, security.md, sponsors*",
    "Readme*": "AUTHORS, Authors, BACKERS*, Backers*, CHANGELOG*, CITATION*, CODEOWNERS, CODE_OF_CONDUCT*, CONTRIBUTING*, CONTRIBUTORS, COPYING*, CREDITS, Changelog*, Citation*, Code_Of_Conduct*, Codeowners, Contributing*, Contributors, Copying*, Credits, GOVERNANCE.MD, Governance.md, HISTORY.MD, History.md, LICENSE*, License*, MAINTAINERS, Maintainers, README-*, README_*, RELEASE_NOTES*, ROADMAP.MD, Readme-*, Readme_*, Release_Notes*, Roadmap.md, SECURITY.MD, SPONSORS*, Security.md, Sponsors*, authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying*, credits, governance.md, history.md, license*, maintainers, readme-*, readme_*, release_notes*, roadmap.md, security.md, sponsors*",
    "README*": "AUTHORS, Authors, BACKERS*, Backers*, CHANGELOG*, CITATION*, CODEOWNERS, CODE_OF_CONDUCT*, CONTRIBUTING*, CONTRIBUTORS, COPYING*, CREDITS, Changelog*, Citation*, Code_Of_Conduct*, Codeowners, Contributing*, Contributors, Copying*, Credits, GOVERNANCE.MD, Governance.md, HISTORY.MD, History.md, LICENSE*, License*, MAINTAINERS, Maintainers, README-*, README_*, RELEASE_NOTES*, ROADMAP.MD, Readme-*, Readme_*, Release_Notes*, Roadmap.md, SECURITY.MD, SPONSORS*, Security.md, Sponsors*, authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying*, credits, governance.md, history.md, license*, maintainers, readme-*, readme_*, release_notes*, roadmap.md, security.md, sponsors*",
    "remix.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, remix.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "requirements.txt": ".editorconfig, .flake8, .isort.cfg, .python-version, requirements*.in, requirements*.pip, requirements*.txt, tox.ini",
    "rush.json": "*.code-workspace, .browserslist*, .circleci*, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json*, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitmojirc.json, .gitpod*, .huskyrc*, .jslint*, .knip.*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .pylintrc, .release-please*.json, .releaserc*, .ruff.toml, .sentry*, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, biome.json*, bower.json, build.config.*, bun.lockb, bunfig.toml, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json*, electron-builder.*, eslint*, firebase.json, grunt*, gulp*, jenkins*, knip.*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-please*.json, release-tasks.sh, release.config.*, renovate*, rollup.config.*, rspack*, ruff.toml, simple-git-hooks*, sonar-project.properties, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, wrangler.toml, xo.config.*, yarn*",
    "sanity.config.*": "sanity.cli.*, sanity.types.ts, schema.json",
    "setup.cfg": ".editorconfig, .flake8, .isort.cfg, .python-version, MANIFEST.in, requirements*.in, requirements*.pip, requirements*.txt, setup.cfg, tox.ini",
    "setup.py": ".editorconfig, .flake8, .isort.cfg, .python-version, MANIFEST.in, requirements*.in, requirements*.pip, requirements*.txt, setup.cfg, setup.py, tox.ini",
    "shims.d.ts": "*.d.ts",
    "svelte.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, houdini.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, mdsvex.config.js, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vite.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "vite.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "vue.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, sst.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "*.asax": "$(capture).*.cs, $(capture).*.vb",
    "*.ascx": "$(capture).*.cs, $(capture).*.vb",
    "*.ashx": "$(capture).*.cs, $(capture).*.vb",
    "*.aspx": "$(capture).*.cs, $(capture).*.vb",
    "*.axaml": "$(capture).axaml.cs",
    "*.bloc.dart": "$(capture).event.dart, $(capture).state.dart",
    "*.c": "$(capture).h",
    "*.cc": "$(capture).hpp, $(capture).h, $(capture).hxx, $(capture).hh",
    "*.cjs": "$(capture).cjs.map, $(capture).*.cjs, $(capture)_*.cjs",
    "*.component.ts": "$(capture).component.html, $(capture).component.spec.ts, $(capture).component.css, $(capture).component.scss, $(capture).component.sass, $(capture).component.less",
    "*.cpp": "$(capture).hpp, $(capture).h, $(capture).hxx, $(capture).hh",
    "*.cs": "$(capture).*.cs",
    "*.cshtml": "$(capture).cshtml.cs",
    "*.csproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
    "*.css": "$(capture).css.map, $(capture).*.css",
    "*.cxx": "$(capture).hpp, $(capture).h, $(capture).hxx, $(capture).hh",
    "*.dart": "$(capture).freezed.dart, $(capture).g.dart",
    "*.db": "*.db-shm, *.db-wal",
    "*.ex": "$(capture).html.eex, $(capture).html.heex, $(capture).html.leex",
    "*.fs": "$(capture).fs.js, $(capture).fs.js.map, $(capture).fs.jsx, $(capture).fs.ts, $(capture).fs.tsx, $(capture).fs.rs, $(capture).fs.php, $(capture).fs.dart",
    "*.go": "$(capture)_test.go",
    "*.java": "$(capture).class",
    "*.js": "$(capture).js.map, $(capture).*.js, $(capture)_*.js",
    "*.jsx": "$(capture).js, $(capture).*.jsx, $(capture)_*.js, $(capture)_*.jsx, $(capture).less, $(capture).module.less, $(capture).module.less.d.ts,  $(capture).scss, $(capture).module.scss, $(capture).module.scss.d.ts",
    "*.master": "$(capture).*.cs, $(capture).*.vb",
    "*.md": "$(capture).*",
    "*.mjs": "$(capture).mjs.map, $(capture).*.mjs, $(capture)_*.mjs",
    "*.module.ts": "$(capture).resolver.ts, $(capture).controller.ts, $(capture).service.ts",
    "*.mts": "$(capture).mts.map, $(capture).*.mts, $(capture)_*.mts",
    "*.pubxml": "$(capture).pubxml.user",
    "*.py": "$(capture).pyi",
    "*.razor": "$(capture).razor.cs, $(capture).razor.css, $(capture).razor.scss",
    "*.resx": "$(capture).*.resx, $(capture).designer.cs, $(capture).designer.vb",
    "*.tex": "$(capture).acn, $(capture).acr, $(capture).alg, $(capture).aux, $(capture).bbl, $(capture).blg, $(capture).fdb_latexmk, $(capture).fls, $(capture).glg, $(capture).glo, $(capture).gls, $(capture).idx, $(capture).ind, $(capture).ist, $(capture).lof, $(capture).log, $(capture).lot, $(capture).out, $(capture).pdf, $(capture).synctex.gz, $(capture).toc, $(capture).xdv",
    "*.ts": "$(capture).js, $(capture).d.ts.map, $(capture).*.ts, $(capture)_*.js, $(capture)_*.ts",
    "*.tsx": "$(capture).ts, $(capture).*.tsx, $(capture)_*.ts, $(capture)_*.tsx, $(capture).less, $(capture).module.less, $(capture).module.less.d.ts, $(capture).scss, $(capture).module.scss, $(capture).module.scss.d.ts, $(capture).css.ts",
    "*.vbproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
    "*.vue": "$(capture).*.ts, $(capture).*.js, $(capture).story.vue",
    "*.w": "$(capture).*.w, I$(capture).w",
    "*.xaml": "$(capture).xaml.cs"
  },
  "[html]": {
    "editor.defaultFormatter": "vscode.html-language-features"
  },
  "[javascript]": {
    "editor.defaultFormatter": "vscode.typescript-language-features"
  },
  "terminal.integrated.profiles.windows": {
    "PowerShell": {
      "source": "PowerShell",
      "icon": "terminal-powershell"
    },
    "Command Prompt": {
      "path": [
        "${env:windir}\\Sysnative\\cmd.exe",
        "${env:windir}\\System32\\cmd.exe"
      ],
      "args": [],
      "icon": "terminal-cmd"
    }
  },
  "terminal.integrated.defaultProfile.windows": "Ubuntu-22.04 (WSL)",
  "security.workspace.trust.untrustedFiles": "open",
  "git.repositoryScanIgnoredFolders": [
    "node_modules",
    "*.log",
    ".vite-ssg-temp",
    "idea/",
    "dist-ssr",
    "*.local",
    ".vite-ssg-dist",
    "&-debug.log",
    "*-error.log",
    ".DS_Store",
    "dist",
    "logs",
    ".cache",
    "lib-cov",
    ".idea"
  ],
  "cSpell.userWords": [
    "Actived",
    "animationl",
    "arrowh",
    "audiol",
    "axesh",
    "bumpp",
    "camelize",
    "capsuleg",
    "cascader",
    "ccommand",
    "corejs",
    "CSSOM",
    "cubetl",
    "echarts",
    "gltf",
    "nums",
    "nuxt",
    "ofetch",
    "Pinia",
    "polyg",
    "rsbuild",
    "rspack",
    "splinec",
    "tbody",
    "tinify",
    "torusg",
    "tsup",
    "tubeg",
    "unfetch",
    "unplugin",
    "Unplugin",
    "vant",
    "vite"
  ],
  "javascript.updateImportsOnFileMove.enabled": "always",
  "typescript.updateImportsOnFileMove.enabled": "always",
  "git.ignoreRebaseWarning": true,
  "html-fmt-vscode.indentSize": 2,
  "debug.allowBreakpointsEverywhere": true,
  "json.schemas": [
    {
      "fileMatch": ["/*.json"],
      "schema": {
        "type": "object"
      }
    }
  ],
  "debug.disassemblyView.showSourceCode": false,
  "terminal.integrated.defaultProfile.osx": "zsh",
  "powermode.enabled": true,
  "powermode.shake.enabled": false,
  "git.path": "/usr/bin/git",
  "terminal.integrated.drawBoldTextInBrightColors": false,
  "settingsSync.ignoredSettings": ["terminal.external.windowsExec"],
  "terminal.external.windowsExec": "",
  "tabnine.experimentalAutoImports": true,
  "prettier.enableDebugLogs": true,
  "[typescript]": {
    "editor.defaultFormatter": "vscode.typescript-language-features"
  },
  "settingsSync.ignoredExtensions": ["dbaeumer.vscode-eslint"],
  "html.format.preserveNewLines": false,
  "[vue]": {
    "editor.defaultFormatter": "Vue.volar"
  },
  "terminal.integrated.env.osx": {
    "FIG_NEW_SESSION": "1"
  },
  "terminal.integrated.enableMultiLinePasteWarning": false,
  "githubPullRequests.pullBranch": "never",
  "svelte.plugin.svelte.note-new-transformation": false,
  "Codegeex.Privacy": true,
  "terminal.external.osxExec": "Warp.app",
  "editor.inlayHints.padding": true,
  "extensions.autoUpdate": "onlyEnabledExtensions",
  "svelte.enable-ts-plugin": true,
  "[typescriptreact]": {
    "editor.defaultFormatter": "vscode.typescript-language-features"
  },
  "files.associations": {
    "*.yao": "json"
  },
  "editor.largeFileOptimizations": false,
  "git.openRepositoryInParentFolders": "never",
  "vscode-script": {
    "auth": "sudo",
    "fontSize": "16px"
  },
  "[json]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "daily-planner": {
    "avater": "https://avatars.githubusercontent.com/u/57086651?s=48&v=4",
    "name": "Simon"
  },
  "githubPullRequests.createOnPublishBranch": "never",
  "terminal.integrated.automationProfile.windows": {},
  "[css]": {
    "editor.defaultFormatter": "aeschli.vscode-css-formatter"
  },
  "javascript.inlayHints.enumMemberValues.enabled": true,
  "javascript.inlayHints.functionLikeReturnTypes.enabled": true,
  "javascript.inlayHints.parameterNames.enabled": "all",
  "javascript.inlayHints.parameterTypes.enabled": true,
  "javascript.inlayHints.propertyDeclarationTypes.enabled": true,
  "javascript.inlayHints.variableTypes.enabled": true,
  "typescript.inlayHints.enumMemberValues.enabled": true,
  "typescript.inlayHints.functionLikeReturnTypes.enabled": true,
  "typescript.inlayHints.parameterNames.enabled": "all",
  "typescript.inlayHints.parameterTypes.enabled": true,
  "typescript.inlayHints.propertyDeclarationTypes.enabled": true,
  "typescript.inlayHints.variableTypes.enabled": true,
  "vue-semantic-server.trace.server": "messages",
  "typescript.enablePromptUseWorkspaceTsdk": true,
  "javascript.suggest.completeFunctionCalls": true,
  "animations.Enabled": true,
  "material-icon-theme-simon.hidesExplorerArrows": true,
  "diffEditor.maxComputationTime": 0,
  "bitoAI.codeCompletion.setAutoCompletionTriggerLogic": 250,
  "terminal.integrated.fontFamily": "FiraCode-Retina",
  "editor.mouseWheelZoom": true,
  "vue.autoInsert.parentheses": false,
  "workbench.sideBar.location": "right",
  "vue.codeLens.enabled": false,
  "vue.codeActions.enabled": false,
  "bitoAI.codeCompletion.enableAutoCompletion": true,
  "bitoAI.codeCompletion.enableCommentToCode": true,
  "liveServer.settings.donotShowInfoMsg": true,
  "notebook.globalToolbar": false,
  "workbench.editor.tabActionLocation": "left",
  "editor.inlineSuggest.showToolbar": "always",
  "explorer.confirmPasteNative": false,
  "path-intellisense.autoTriggerNextSuggestion": true,
  "editor.linkedEditing": true,
  "editor.bracketPairColorization.independentColorPoolPerBracketType": true,
  "editor.minimap.enabled": false,
  "fast-jump.deepType": false,
  "prettify-ts.viewNestedTypes": false,
  "prettify-ts.enableHover": true,
  "cSpell.caseSensitive": true,
  "cSpell.showAutocompleteSuggestions": true,
  "cSpell.advanced.feature.useReferenceProviderWithRename": true,
  "lazy-install.way": "pi",
  "codelens-sample.enableCodeLens": true,
  "astGrep.serverPath": "/Users/hejian/Library/Caches/fnm_multishells/95028_1707287134748/bin/sg",
  "astGrep.configPath": "sgconfig.yml",
  "gitlens.views.branches.branches.layout": "list",
  "workbench.editorAssociations": {
    "git-rebase-todo": "gitlens.rebase"
  },
  "git-graph.date.format": "Relative",
  "tailwindMagic.aggressiveMode": true,
  "symbol-mapping-conversion.isEnable": false,
  "symbol-mapping-conversion.extLanguage": [],
  "symbol-mapping-conversion.mappings": {
    "rust": {
      "'": "\""
    },
    "base": {
      "cosnt": "const",
      "improt": "import",
      "Bearer ": "",
      "【": "[$1]",
      "（": "($1)"
    }
  },
  "vscode-highlight-text.rules": {
    "vue|react|typescript": {
      "light": {
        "purple": {
          "match": ["v-if", "v-else-if", "v-else"],
          "before": {
            "contentText": "✨"
          }
        },
        "#B392F0": ["v-for"],
        "#FFC83D": [
          "<template\\s+(\\#[^\\s\\/>=]+)",
          "\\s+(v-bind)",
          "\\s+(v-once)",
          "\\s+(v-on)",
          "\\s+(v-slot:[^>\\s\\/>]+)",
          "\\s+(v-html)",
          "\\s+(v-text)"
        ],
        "rgb(99, 102, 241)": [":(is)="],
        "rgb(110,231,183)": [
          "(defineProps)[<\\(]",
          "(defineOptions)[<\\(]",
          "(defineEmits)[<\\(]",
          "(defineExpose)[<\\(]"
        ]
      },
      "dark": {
        "#fae88e": {
          "match": [
            "^\\s*(?:export)?\\s*(type)\\s+",
            "^\\s*(?:export)?\\s*(interface)\\s+"
          ]
        },
        "#d798da": {
          "match": ["(?:=|^)\\s*(function) +(\\w*)"],
          "matchCss": [
            {
              "color": "#7a84b9"
            },
            {
              "color": "#5c69ac",
              "backgroundColor": "rgba(92, 105, 172, 0.1)",
              "borderRadius": "8px"
            }
          ]
        },
        "#d9ceff": {
          "match": [
            ["^\\s*import\\s.*\\sfrom (['\"][^\\.~'\"][^\"']+['\"])", "gm"]
          ]
        },
        "#c7fff9": {
          "match": ["^\\s*import\\s.*\\sfrom (['\"][\\.~/][^\"']+['\"])"]
        },
        "#cfe9c9": {
          "match": ["^\\s*import\\s+(['\"][^\"']+['\"])"]
        },
        "purple": {
          "match": ["\\s(v-else-if)=", "\\s(v-if)=", "\\s(v-else)\\s"],
          "before": {
            "contentText": "✨"
          }
        },
        "#B392F0": {
          "match": ["\\s+(v-for)="]
        },
        "#FFC83D": [
          "<template\\s+(\\#[^\\s\\/>=]+)",
          "\\s+(v-bind)",
          "\\s+(v-once)",
          "\\s+(v-on)",
          "(v-slot:[^>\\s\\/>]+)",
          "\\s+(v-html)",
          "\\s+(v-text)"
        ],
        "rgb(99, 102, 241)": {
          "match": ["(:is)="],
          "ignoreReg": ["`[^`]*`"]
        },
        "#8589cf": [
          "(defineProps)[<\\(]",
          "(defineOptions)[<\\(]",
          "(defineEmits)[<\\(]",
          "(defineExpose)[<\\(]"
        ],
        "#174e3a": ["<(template)[^>]*>", "</(template)>"],
        "#4d4c87": ["<(script)[^>]*>", "</(script)>"],
        "#724485": ["<(style)[^>]*>", "</(style)>"],
        "id": {
          "match": ["\\s+(id)="],
          "before": {
            "contentText": "🆔"
          }
        },
        "key": {
          "match": ["\\s+(key)="],
          "before": {
            "contentText": "🫧"
          }
        },
        "#f08b47": ["// TODO:.*"],
        "#c41f0a": ["// IMPORTANT:.*"],
        "#6c09ce": ["<script.*lang=\"(\\w+)\">"],
        "#10b2ca": {
          "match": ["^\\s*//\\s*([0-9]+[.)、])"]
        },
        "#a58e92": {
          "match": ["^\\s*//([^\u4e00-\u9fa5\\n]*([\u4e00-\u9fa5]+))+"]
        },
        "#6d6d6d": {
          "match": ["(<!--[\\s\\S]*?-->)", "^\\s*(//[^\\n]*)"]
        }
      }
    },
    "markdown": {
      "light": {
        "#49baff": {
          "match": ["^# .*"]
        },
        "#b5e3ff": {
          "match": ["^## .*"]
        },
        "#edf8ff": {
          "match": ["^### .*"]
        }
      },
      "dark": {
        "#49baff": {
          "match": ["(\\[)([^\\]]*)(\\])\\s*\\(([^)]*)\\)"],
          "colors": ["#b5e3ff", "#0777ff", "#b5e3ff", "#43e599"]
        },
        "#9f75ff": {
          "match": ["^# .*"]
        },
        "#bea6ff": {
          "match": ["^## .*"]
        },
        "#d9ceff": {
          "match": ["^### .*"]
        },
        "#8fffe3": {
          "match": ["[^`]?\\`([^`]*)\\`"],
          "ignoreReg": ["```([^`])+```"]
        },
        "#b0ffcc": {
          "match": ["\\*+([^\\*]*)\\*+"]
        },
        "#0065fb": {
          "match": ["\"(?:http|\\.?/)[^\"]*\""]
        },
        "#111": {
          "match": ["\\s+([a-zA-Z]+)(=)\"([^\"]*)\""],
          "colors": ["#b5e3ff", "#145b57", "#51a6bf", "#43e599"]
        },
        "#ffbe6c": {
          "match": ["^\\s*<([a-zA-Z]+)\\s+", "</([a-zA-Z]+)>"]
        },
        "#e48d85": {
          "match": ["^\\s*\\-\\s+(.*)"]
        },
        "#fef1f8": {
          "match": ["[a-zA-z]+"],
          "ignoreReg": ["```([^`])+```"]
        },
        "#e5e8ff": {
          "match": ["\\d+"],
          "ignoreReg": ["```([^`])+```"]
        }
      }
    },
    "plaintext": {
      "dark": {
        "red": ["nihao"]
      }
    }
  },
  // Enable eslint for all supported languages
  "editor.suggest.snippetsPreventQuickSuggestions": false,
  "editor.quickSuggestionsDelay": 50,
  "editor.quickSuggestions": {
    "strings": true
  },
  "editor.showFoldingControls": "always",
  "editor.hover.above": false,
  "editor.padding.top": 2,
  "editor.scrollbar.horizontalScrollbarSize": 6,
  "editor.scrollbar.verticalScrollbarSize": 25,
  "editor.cursorBlinking": "smooth",
  "window.customTitleBarVisibility": "windowed",
  "workbench.iconTheme": "catppuccin-mocha",
  "filename-detection.cSpell": false,
  "github.copilot.editor.enableAutoCompletions": true,
  "unot.useHex": true,
  "unocss.borderRadius": 0,
  "unot.strictVariable": false,
  "vscode-highlight-text.exclude": ["**/dist/**", "**/node_modules/**"],
  "workbench.activityBar.location": "top",
  "tailwindMagic.highlight": true,
  "vue.server.includeLanguages": ["vue"],
  "fast-create-variable.snippet": [
    {
      "name": "readFile",
      "position": "current",
      "description": "在 vue 中, 使用 unref 获取 ref 实例",
      "languageIds": ["typescript", "javascript"],
      "additionalDependencies": [
        {
          "name": "fsp",
          "from": "node:fs/promises",
          "isDefault": true
        }
      ],
      "content": "const content = fsp.readFile(\"${1:filePath}\", 'utf-8')"
    },
    {
      "name": "unref",
      "position": "wrapper",
      "description": "在 vue 中, 使用 unref 获取 ref 实例",
      "languageIds": ["vue"],
      "isScriptSetup": true,
      "isInScript": true,
      "isInTemplateTag": true,
      "content": "unref(<title>)"
    },
    {
      "name": "elRef",
      "position": "attr",
      "description": "获取组件 ref 实例 ref=\"\"",
      "languageIds": ["vue"],
      "isInTemplateTag": true,
      "content": "ref=\"${1:compRef}\""
    },
    {
      "name": "onMounted",
      "position": "end",
      "description": "在 vue 中, 使用 onMounted 钩子",
      "languageIds": ["vue"],
      "version": "2.7",
      "from": "vue",
      "only": true,
      "isScriptSetup": true,
      "content": "  onMounted(() => {\n    $1\n  })\n"
    },
    {
      "name": "onUpdated",
      "position": "end",
      "description": "在 vue 中, 使用 onUpdated 钩子",
      "languageIds": ["vue"],
      "version": "2.7",
      "from": "vue",
      "isScriptSetup": true,
      "only": true,
      "content": "  onUpdated(() => {\n    $1\n  })\n"
    },
    {
      "name": "onUnmounted",
      "position": "end",
      "description": "在 vue 中, 使用 onUnmounted 钩子",
      "languageIds": ["vue"],
      "version": "2.7",
      "from": "vue",
      "isScriptSetup": true,
      "only": true,
      "content": "  onUnmounted(() => {\n    $1\n  })\n"
    },
    {
      "name": "onBeforeMount",
      "position": "end",
      "description": "在 vue 中, 使用 onBeforeMount 钩子",
      "languageIds": ["vue"],
      "version": "2.7",
      "from": "vue",
      "isScriptSetup": true,
      "only": true,
      "content": "  onBeforeMount(() => {\n    $1\n  })\n"
    },
    {
      "name": "onBeforeUpdate",
      "position": "end",
      "description": "在 vue 中, 使用 onBeforeUpdate 钩子",
      "languageIds": ["vue"],
      "version": "2.7",
      "from": "vue",
      "isScriptSetup": true,
      "only": true,
      "content": "  onBeforeUpdate(() => {\n    $1\n  })\n"
    },
    {
      "name": "onBeforeUnmount",
      "position": "end",
      "description": "在 vue 中, 使用 onBeforeUnmount 钩子",
      "languageIds": ["vue"],
      "version": "2.7",
      "from": "vue",
      "isScriptSetup": true,
      "only": true,
      "content": "  onBeforeUnmount(() => {\n    $1\n  })\n"
    },
    {
      "name": "onErrorCaptured",
      "position": "end",
      "description": "在 vue 中, 使用 onErrorCaptured 钩子",
      "languageIds": ["vue"],
      "version": "2.7",
      "from": "vue",
      "isScriptSetup": true,
      "only": true,
      "content": "  onErrorCaptured(() => {\n    $1\n  })\n"
    },
    {
      "name": "useRouter",
      "from": "vue-router",
      "position": "top",
      "description": "快速从 vue-router 中, 获取当前路由信息",
      "languageIds": ["vue"],
      "isScriptSetup": true,
      "version": "3",
      "only": true,
      "content": "  const router = useRouter()\n"
    },
    {
      "name": "useRoute",
      "from": "vue-router",
      "position": "top",
      "description": "快速从 vue-router 中, 获取当前路由信息",
      "languageIds": ["vue"],
      "isScriptSetup": true,
      "version": "3",
      "only": true,
      "content": "  const route = useRoute()\n"
    },
    {
      "name": "useRoute",
      "position": "top",
      "description": "vue3 获取当前路由信息",
      "languageIds": ["vue"],
      "only": true,
      "version": "<3.0.0",
      "isScriptSetup": true,
      "additionalDependencies": [
        {
          "name": "getCurrentInstance",
          "from": "vue"
        }
      ],
      "content": "  const vm = getCurrentInstance().proxy\n  const route = vm.\\$route$1\n"
    },
    {
      "name": "useRouter",
      "position": "top",
      "description": "vue3 获取当前路由信息",
      "languageIds": ["vue"],
      "only": true,
      "version": "<3.0.0",
      "isScriptSetup": true,
      "additionalDependencies": [
        {
          "name": "getCurrentInstance",
          "from": "vue"
        }
      ],
      "content": "  const vm = getCurrentInstance().proxy\n  const router = vm.\\$router$1\n"
    },
    {
      "name": "useLocation",
      "from": "react-router-dom",
      "position": "top",
      "description": "在 react 中, 使用 useLocation 获取当前路由信息, 并使用 qs 解析参数",
      "languageIds": ["typescriptreact"],
      "content": "  const locations = useLocation()\n  const params = qs.parse(locations.search, { ignoreQueryPrefix: true })\n",
      "isInJSX": true,
      "only": true,
      "additionalDependencies": [
        {
          "name": "qs",
          "from": "qs",
          "isDefault": true
        }
      ]
    },
    {
      "name": "import",
      "from": "",
      "position": "hoist-top",
      "description": "使用 import 顶部导入依赖",
      "languageIds": [
        "typescriptreact",
        "typescript",
        "javascriptreact",
        "javascript"
      ],
      "content": "import ${2:<title>} from '${1:module}'\n"
    },
    {
      "name": "import css",
      "from": "",
      "position": "hoist-top",
      "description": "使用 import 顶部导入依赖 css 样式",
      "languageIds": [
        "typescriptreact",
        "typescript",
        "javascriptreact",
        "javascript"
      ],
      "content": "import '${1:module}'\n"
    },
    {
      "name": "import",
      "from": "",
      "position": "hoist-top",
      "description": "使用 import 顶部导入依赖",
      "languageIds": ["vue"],
      "content": "  import ${2:<title>} from '${1:module}'\n"
    },
    {
      "name": "import {}",
      "from": "",
      "position": "hoist-top",
      "description": "使用 import {} 顶部导入依赖",
      "languageIds": [
        "typescriptreact",
        "typescript",
        "javascriptreact",
        "javascript"
      ],
      "content": "import { ${2:<title>} } from '${1:module}'\n"
    },
    {
      "name": "import {}",
      "from": "",
      "position": "hoist-top",
      "description": "使用 import {} 顶部导入依赖",
      "languageIds": ["vue"],
      "content": "  import { ${2:<title>} } from '${1:module}'\n"
    },
    {
      "name": "@click",
      "from": "",
      "position": "attr",
      "description": "在 vue template 中, 当前位置创建 @click 事件",
      "isInTemplateTag": true,
      "languageIds": ["vue"],
      "content": "@click=\"${1|clickHandler,handleClick,onClick,removeHandler,onRemove,onReset,closeHandler,onClose,openHandler,onOpen,submitHandler,onSubmit,onLogin,onLogout,toggleHandler,onToggle,showHandler,onShow,hideHandler,onHide|}$2\""
    },
    {
      "name": "@click",
      "from": "",
      "position": "attr",
      "description": "在 react 中, 当前位置创建 onClick 事件",
      "isInTemplateTag": true,
      "languageIds": ["typescriptreact", "javascriptreact"],
      "content": "onClick={(${2:e}) => ${1|clickHandler,handleClick,onClick,removeHandler,onRemove,onReset,closeHandler,onClose,openHandler,onOpen,submitHandler,onSubmit,onLogin,onLogout,toggleHandler,onToggle,showHandler,onShow,hideHandler,onHide|}(${2:e}$3)}$4"
    },
    {
      "name": "@keydown",
      "from": "",
      "position": "attr",
      "isInTemplateTag": true,
      "description": "在 vue template 中, 当前位置创建 @keydown 事件",
      "languageIds": ["vue"],
      "content": "@keydown=\"${1|keydownHandler,handleKeydown,onKeyDown|}$2\""
    },
    {
      "name": "@keydown",
      "from": "",
      "position": "attr",
      "isInTemplateTag": true,
      "description": "在 react 中, 当前位置创建 onKeydown 事件",
      "languageIds": ["typescriptreact", "javascriptreact"],
      "content": "onKeyDown={(${2:e}) => ${1|keydownHandler,handleKeydown,onKeyDown|}(${2:e}$3)}$4"
    },
    {
      "name": "@keyup",
      "from": "",
      "position": "attr",
      "isInTemplateTag": true,
      "description": "在 vue template 中, 当前位置创建 @keyup 事件",
      "languageIds": ["vue"],
      "content": "@keyup=\"${1|keyUpHandler,handleKeyUp,onKeyUp|}$2\""
    },
    {
      "name": "@keyup",
      "from": "",
      "position": "attr",
      "isInTemplateTag": true,
      "description": "在 react 中, 当前位置创建 onKeyup 事件",
      "languageIds": ["typescriptreact", "javascriptreact"],
      "content": "onKeyUp={(${2:e}) => ${1|keyUpHandler,handleKeyUp,onKeyUp|}(${2:e}$3)}$4"
    },
    {
      "name": "@focus",
      "from": "",
      "position": "attr",
      "isInTemplateTag": true,
      "description": "在 vue template 中, 当前位置创建 @focus 事件",
      "languageIds": ["vue"],
      "content": "@focus=\"${1|focusHandler,handleFocus,onFocus|}$2\""
    },
    {
      "name": "@focus",
      "from": "",
      "position": "attr",
      "isInTemplateTag": true,
      "description": "在 react 中, 当前位置创建 onFocus 事件",
      "languageIds": ["typescriptreact", "javascriptreact"],
      "content": "onFocus={(${2:e}) => ${1|focusHandler,handleFocus,onFocus|}(${2:e}$3)}$4"
    },
    {
      "name": "@blur",
      "from": "",
      "position": "attr",
      "isInTemplateTag": true,
      "description": "在 vue template 中, 当前位置创建 @blur 事件",
      "languageIds": ["vue"],
      "content": "@blur=\"${1|blurHandler,handleBlur,onBlur|}$2\""
    },
    {
      "name": "@blur",
      "from": "",
      "position": "attr",
      "isInTemplateTag": true,
      "description": "在 react 中, 当前位置创建 onBlur 事件",
      "languageIds": ["typescriptreact", "javascriptreact"],
      "content": "onBlur={(${2:e}) => ${1|blurHandler,handleBlur,onBlur|}(${2:e}$3)}$4"
    },
    {
      "name": "@mouseover",
      "from": "",
      "position": "attr",
      "isInTemplateTag": true,
      "description": "在 vue template 中, 当前位置创建 @mouseover 事件",
      "languageIds": ["vue"],
      "content": "@mouseover=\"${1|mouseOverHandler,handleMouseOver,onMouseOver|}$2\""
    },
    {
      "name": "@mouseover",
      "from": "",
      "position": "attr",
      "isInTemplateTag": true,
      "description": "在 react 中, 当前位置创建 onMouseover 事件",
      "languageIds": ["typescriptreact", "javascriptreact"],
      "content": "onMouseOver={(${2:e}) => ${1|mouseOverHandler,handleMouseOver,onMouseOver|}(${2:e}$3)}$4"
    },
    {
      "name": "@mouseOut",
      "from": "",
      "position": "attr",
      "isInTemplateTag": true,
      "description": "在 vue template 中, 当前位置创建 @mouseOut 事件",
      "languageIds": ["vue"],
      "content": "@mouseOut=\"${1|mouseOutHandler,handleMouseOut,onMouseOut|}$2\""
    },
    {
      "name": "@mouseOut",
      "from": "",
      "position": "attr",
      "isInTemplateTag": true,
      "description": "在 react 中, 当前位置创建 onMouseOut 事件",
      "languageIds": ["typescriptreact", "javascriptreact"],
      "content": "onMouseOut={(${2:e}) => ${1|mouseOutHandler,handleMouseOut,onMouseOut|}(${2:e}$3)}$4"
    },
    {
      "name": "@error",
      "from": "",
      "position": "attr",
      "isInTemplateTag": true,
      "description": "在 vue template 中, 当前位置创建 @error 事件",
      "languageIds": ["vue"],
      "content": "@error=\"${1|errorHandler,handleError,onError|}$2\""
    },
    {
      "name": "@error",
      "from": "",
      "position": "attr",
      "isInTemplateTag": true,
      "description": "在 react 中, 当前位置创建 onError 事件",
      "languageIds": ["typescriptreact", "javascriptreact"],
      "content": "onError={(${2:e}) => ${1|errorHandler,handleError,onError|}(${2:e}$3)}$4"
    },
    {
      "name": "@submit",
      "from": "",
      "position": "attr",
      "isInTemplateTag": true,
      "description": "在 vue template 中, 当前位置创建 @submit 事件",
      "languageIds": ["vue"],
      "content": "@submit=\"${1|submitHandler,handleSubmit,onSubmit|}$2\""
    },
    {
      "name": "@submit",
      "from": "",
      "position": "attr",
      "isInTemplateTag": true,
      "description": "在 react 中, 当前位置创建 onSubmit 事件",
      "languageIds": ["typescriptreact", "javascriptreact"],
      "content": "onSubmit={(${2:e}) => ${1|submitHandler,handleSubmit,onSubmit|}(${2:e}$3)}$4"
    },
    {
      "name": "@scroll",
      "from": "",
      "position": "attr",
      "isInTemplateTag": true,
      "description": "在 vue template 中, 当前位置创建 @scroll 事件",
      "languageIds": ["vue"],
      "content": "@scroll=\"${1|scrollHandler,handleScroll,onScroll|}$2\""
    },
    {
      "name": "@scroll",
      "from": "",
      "position": "attr",
      "isInTemplateTag": true,
      "description": "在 react 中, 当前位置创建 onScroll 事件",
      "languageIds": ["typescriptreact", "javascriptreact"],
      "content": "onScroll={(${2:e}) => ${1|scrollHandler,handleScroll,onScroll|}(${2:e}$3)}$4"
    },
    {
      "name": "@change",
      "from": "",
      "position": "attr",
      "isInTemplateTag": true,
      "description": "在 vue template 中, 当前位置创建 @change 事件",
      "languageIds": ["vue"],
      "content": "@change=\"${1|changeHandler,handleChange,onChange|}$2\""
    },
    {
      "name": "@change",
      "from": "",
      "position": "attr",
      "isInTemplateTag": true,
      "description": "在 react 中, 当前位置创建 onChange 事件",
      "languageIds": ["typescriptreact", "javascriptreact"],
      "content": "onChange={(${2:e}) => ${1|changeHandler,handleChange,onChange|}(${2:e}$3)}$4"
    }
  ],
  "workbench.colorTheme": "Vitesse Dark Soft",
  "workbench.preferredLightColorTheme": "Vitesse Dark Soft",
  "workbench.preferredDarkColorTheme": "Vitesse Dark Soft",
  "editor.fontFamily": "Menlo, Monaco, 'Courier New', monospace",
  "common-intellisense.alias": {},
  "common-intellisense.localUris": [],
  "common-intellisense.remoteNpmUris": [],
  "unocss.autocomplete.strict": true,
  "common-intellisense-local.prefixMap": [],
  "workbench.productIconTheme": "fluent-icons",
  "tailwindMagic.skipMappings": {
    "el-form": ["inline"],
    "Form": ["inline"],
    "el-table": ["border"],
    "Table": ["border"],
    "van-button": ["block"]
  },
  "common-intellisense.remoteUris": [],
  "baidu.comate.privateService": "",
  "baidu.comate.username": "heartrffg",
  "baidu.comate.license": "8cccd325-59cf-4484-b856-7185761edcde",
  "baidu.comate.enableSecurityEnhancement": false,
  "baidu.comate.linePreferMode": "auto",
  "vue.format.script.initialIndent": true,
  "vue.format.style.initialIndent": true,
  "typescript.referencesCodeLens.enabled": true,
  "terminal.integrated.gpuAcceleration": "on",
  "editor.cursorSmoothCaretAnimation": "on"
}
